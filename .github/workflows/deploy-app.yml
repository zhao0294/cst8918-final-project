name: Deploy Application

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
      - '.github/workflows/deploy-app.yml'
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - '.github/workflows/deploy-app.yml'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-to-test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group cst8918-final-project-group-1 --name test-aks --overwrite-existing

      - name: Deploy to test environment
        run: |
          kubectl set image deployment/weather-app weather-app=${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} -n weather-app
          kubectl rollout status deployment/weather-app -n weather-app

  deploy-to-prod:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-to-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group cst8918-final-project-group-1 --name prod-aks --overwrite-existing

      - name: Deploy to production environment
        run: |
          kubectl set image deployment/weather-app weather-app=${{ secrets.ACR_LOGIN_SERVER }}/weather-app:${{ github.sha }} -n weather-app
          kubectl rollout status deployment/weather-app -n weather-app 